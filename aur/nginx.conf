events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=30s;

    upstream upstream-cache-aur-rpc {
        zone upstream_proxy_dynamic 64k;
        server cache-aur-rpc:8080 resolve;
        keepalive 64;
    }

    upstream upstream-cache-aur-repos {
        zone upstream-cache-aur-repos_dynamic 64k;
        server cache-aur-repos:80 resolve;
        keepalive 64;
    }

    server {
        listen                     7776;
        http2                      on;
        server_name                _;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location /rpc {
            proxy_pass          https://upstream-cache-aur-rpc;
            proxy_ssl_verify    off;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host 'aur.local:7776';
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;
        }

        location /repos {
                rewrite /repos/(.*) /$1  break;
                proxy_pass          https://upstream-cache-aur-repos;
                proxy_ssl_verify    off;
                proxy_http_version  1.1;
                proxy_set_header    Connection "";
                proxy_set_header    X-Forwarded-Host 'aur.local:7776';
                proxy_buffers       16 256k;
                proxy_buffer_size   256k;
            }



    }

    server {
        listen                     80;
        server_name                localhost;

        location = /health {
                access_log off;
                add_header 'Content-Type' 'application/json';
                return 200 '{"status":"UP"}';
        }
    }
}
