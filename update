#! /bin/sh

die() {
    echo
    echo "$@"
    exit 1
}

BASEDIR="$(dirname "$(readlink -f "$0")")"

git pull

[ -d /cache/ ] || sudo mkdir /cache
[ -d /cache/arch-pkgs ] || sudo mkdir /cache/arch-pkgs
[ -d /cache/flathub-pkgs ] || sudo mkdir /cache/flathub-pkgs
[ -d /cache/proxy ] || sudo mkdir /cache/proxy
[ -d /cache/aur ] || sudo mkdir /cache/aur
[ -d /cache/aur/metadata ] || sudo mkdir /cache/aur/metadata
[ -d /cache/aur/repos ] || sudo mkdir /cache/aur/repos

sudo chown -R 1654:1654 /cache/aur/metadata || die "Could not set aur/metadata permissions"
sudo chown -R 1654:1654 /cache/aur/repos || die "Could not set aur/repos permissions"
sudo chown -R 1654:1654 /cache/proxy || die "Could not set proxy permissions"

[ -f /etc/pacman.d/chaotic-mirrorlist ] || die "No /etc/pacman.d/chaotic-mirrorlist"

rate-mirrors --allow-root --protocol=https --save "$BASEDIR/mirrorlist" arch
rate-mirrors --allow-root --protocol=https --save "$BASEDIR/chaotic-mirrorlist" chaotic-aur


if [ ! -f "$BASEDIR/certs/dh.pem" ]; then
  echo "Generating PFS"
  openssl dhparam -out "$BASEDIR/certs/dh.pem" 4096
fi


[ -f "$BASEDIR/certs/aur.local.pfx" ] || "$BASEDIR/certs/generate" aur.local
[ -f "$BASEDIR/certs/aur.local.pfx" ] || die "No aur cert"

[ -f "$BASEDIR/certs/proxy.local.pfx" ] || "$BASEDIR/certs/generate" proxy.local
[ -f "$BASEDIR/certs/proxy.local.pfx" ] || die "No proxy cert"

[ -f "$BASEDIR/certs/flathub.local.pfx" ] || "$BASEDIR/certs/generate" flathub.local
[ -f "$BASEDIR/certs/flathub.local.pfx" ] || die "No flathub cert"


# Ensure Pfx is readable
chmod 644 "$BASEDIR/certs/aur.local.pfx"
chmod 644 "$BASEDIR/certs/proxy.local.pfx"
chmod 644 "$BASEDIR/certs/flathub.local.key"
chmod 644 "$BASEDIR/certs/flathub.local.pem"

#sudo chown -R 10001:65533 /cache/arch-pkgs || die "Could not set npm permissions"

sudo docker volume create \
  --opt type=none \
  --opt o=bind \
  --opt device=/cache/aur/metadata \
  cache-aur-metadata

sudo docker volume create \
  --opt type=none \
  --opt o=bind \
  --opt device=/cache/aur/repos \
  cache-aur-repos

sudo docker volume create \
  --opt type=none \
  --opt o=bind \
  --opt device=/cache/proxy \
  cache-proxy

sudo docker volume create \
  --opt type=none \
  --opt o=bind \
  --opt device=/cache/flathub-pkgs \
  cache-flathub

sudo docker volume create \
  --opt type=none \
  --opt o=bind \
  --opt device=/cache/arch-pkgs \
  cache-pacoloco

sudo docker compose pull || die "Could not pull images"
sudo docker compose build || die "Could not build images"

sudo docker compose up -d --remove-orphans || die "Could not start containers"
